<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.database_cli.mapper.GoodsMapper">

    <!-- 结果映射 -->
    <resultMap id="BaseResultMap" type="com.example.database_cli.model.entity.Goods">
        <id column="goods_id" property="goodsId" jdbcType="VARCHAR"/>
        <result column="goods_name" property="goodsName" jdbcType="VARCHAR"/>
        <result column="seller_id" property="sellerId" jdbcType="VARCHAR"/>
        <result column="type" property="type" jdbcType="VARCHAR"/>
        <result column="price" property="price" jdbcType="DOUBLE"/>
        <result column="num" property="num" jdbcType="INTEGER"/>
        <result column="images" property="images" jdbcType="VARCHAR" 
                typeHandler="com.example.database_cli.config.JsonTypeHandler"/>
    </resultMap>

    <!-- 基础字段 -->
    <sql id="Base_Column_List">
        goods_id, goods_name, seller_id, type, price, num, images
    </sql>

    <!-- 根据ID查询商品 -->
    <select id="selectById" parameterType="string" resultMap="BaseResultMap">
        SELECT 
        <include refid="Base_Column_List"/>
        FROM goods
        WHERE goods_id = #{goodsId}
    </select>

    <!-- 查询所有商品 -->
    <select id="selectAll" resultMap="BaseResultMap">
        SELECT 
        <include refid="Base_Column_List"/>
        FROM goods
    </select>

    <!-- 插入商品 -->
    <insert id="insert" parameterType="com.example.database_cli.model.entity.Goods">
        INSERT INTO goods (goods_id, goods_name, seller_id, type, price, num, images)
        VALUES (#{goodsId}, #{goodsName}, #{sellerId}, #{type}, #{price}, #{num}, #{images, typeHandler=com.example.database_cli.config.JsonTypeHandler})
    </insert>

    <!-- 更新商品信息 -->
    <update id="update" parameterType="com.example.database_cli.model.entity.Goods">
        UPDATE goods
        SET goods_name = #{goodsName},
            seller_id = #{sellerId},
            type = #{type},
            price = #{price},
            num = #{num},
            images = #{images, typeHandler=com.example.database_cli.config.JsonTypeHandler}
        WHERE goods_id = #{goodsId}
    </update>

    <!-- 根据ID删除商品 -->
    <delete id="deleteById" parameterType="string">
        DELETE FROM goods
        WHERE goods_id = #{goodsId}
    </delete>

    <!-- 根据卖家ID查询商品 -->
    <select id="selectBySellerId" parameterType="string" resultMap="BaseResultMap">
        SELECT 
        <include refid="Base_Column_List"/>
        FROM goods
        WHERE seller_id = #{sellerId}
    </select>

    <!-- 根据商品类型查询 -->
    <select id="selectByType" parameterType="string" resultMap="BaseResultMap">
        SELECT 
        <include refid="Base_Column_List"/>
        FROM goods
        WHERE type = #{type}
    </select>

    <!-- 根据商品名称模糊查询 -->
    <select id="selectByGoodsNameLike" parameterType="string" resultMap="BaseResultMap">
        SELECT 
        <include refid="Base_Column_List"/>
        FROM goods
        WHERE goods_name LIKE CONCAT('%', #{goodsName}, '%')
    </select>

    <!-- 根据价格范围查询 -->
    <select id="selectByPriceRange" resultMap="BaseResultMap">
        SELECT 
        <include refid="Base_Column_List"/>
        FROM goods
        WHERE price BETWEEN #{minPrice} AND #{maxPrice}
    </select>

    <!-- 更新商品库存 -->
    <update id="updateNum">
        UPDATE goods
        SET num = #{num}
        WHERE goods_id = #{goodsId}
    </update>

</mapper> 